From 22dce48d7e2dc50d65f3dc865513469e62f0b5e1 Mon Sep 17 00:00:00 2001
From: Isaac <isaacsun0813@gmail.com>
Date: Fri, 20 Sep 2024 00:03:19 +0200
Subject: [PATCH 1/3] Finished dev

---
 build.gradle                                  | 30 +++++++
 custom/docker/docker-compose.yml              |  1 +
 docker-compose.yml                            |  4 +
 .../core/service/SearchParameters.java        | 79 ++++++++++++++++++-
 .../api/SavingsAccountsApiResource.java       | 12 ++-
 ...SavingsAccountReadPlatformServiceImpl.java | 46 ++++++++---
 .../ClientSavingsBirthdayTest.java            | 73 +++++++++++++++++
 7 files changed, 226 insertions(+), 19 deletions(-)
 create mode 100644 integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsBirthdayTest.java

diff --git a/build.gradle b/build.gradle
index 0904122ed..430571af2 100644
--- a/build.gradle
+++ b/build.gradle
@@ -18,6 +18,16 @@
  */
 // TODO: this is work in progress, please follow FINERACT-1171
 buildscript {
+    configurations.classpath {
+        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
+            if (details.requested.group == 'com.burgstaller' &&
+                    details.requested.name == 'okhttp-digest' &&
+                    details.requested.version == '1.10') {
+                details.useTarget "io.github.rburgst:${details.requested.name}:1.21"
+                details.because 'Dependency has moved'
+            }
+        }
+    }
     ext {
         jacocoVersion = '0.8.10'
         retrofitVersion = '2.9.0'
@@ -352,6 +362,25 @@ configure(project.fineractJavaProjects) {
 
     dependencies {
         spotbugsPlugins 'jp.skypencil.findbugs.slf4j:bug-pattern:1.5.0@jar'
+        // Add these in for our tests
+        testImplementation 'io.rest-assured:rest-assured:4.4.0'
+        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
+        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
+        testImplementation 'org.mockito:mockito-core:4.0.0'
+        testImplementation 'org.mockito:mockito-junit-jupiter:4.0.0'
+        testImplementation 'org.assertj:assertj-core:3.19.0'
+
+        // Existing dependencies
+        testImplementation('org.mockito:mockito-core',
+                'org.mockito:mockito-junit-jupiter',
+                'org.junit.jupiter:junit-jupiter-api',
+                'org.junit.jupiter:junit-jupiter-engine',
+                'org.bouncycastle:bcpkix-jdk15to18',
+                'org.bouncycastle:bcprov-jdk15to18',
+                'org.awaitility:awaitility',
+                'com.google.truth:truth',
+                'com.google.truth.extensions:truth-java8-extension'
+                )
     }
 
     // Configuration for the spotless plugin
@@ -408,6 +437,7 @@ configure(project.fineractJavaProjects) {
     dependencies {
         checkstyle 'com.puppycrawl.tools:checkstyle:10.12.1'
         checkstyle 'com.github.sevntu-checkstyle:sevntu-checks:1.44.1'
+
     }
 
     // Configuration for JaCoCo code coverage task
diff --git a/custom/docker/docker-compose.yml b/custom/docker/docker-compose.yml
index adc1180e3..96852a53f 100644
--- a/custom/docker/docker-compose.yml
+++ b/custom/docker/docker-compose.yml
@@ -35,6 +35,7 @@ services:
     ports:
       - "3306:3306"
   fineract-server:
+    platform: linux/amd64
     image: fineract-custom:latest
     volumes:
       - ../../fineract-provider/build/data:/data
diff --git a/docker-compose.yml b/docker-compose.yml
index dd2e3fe66..7328fd40f 100644
--- a/docker-compose.yml
+++ b/docker-compose.yml
@@ -23,6 +23,7 @@ services:
   fineractmysql:
     image: mariadb:11.0
     volumes:
+      - fineract-db-data:/var/lib/mysql #added this so that the data is persisted
       - ./fineract-db/server_collation.cnf:/etc/mysql/conf.d/server_collation.cnf
       - ./fineract-db/docker:/docker-entrypoint-initdb.d:Z,ro
     restart: always
@@ -90,3 +91,6 @@ services:
       - FINERACT_DEFAULT_TENANTDB_NAME=fineract_default
       - FINERACT_DEFAULT_TENANTDB_DESCRIPTION=Default Demo Tenant
       - JAVA_TOOL_OPTIONS="-Xmx1G"
+# Volumes for the database
+volumes:
+  fineract-db-data:
diff --git a/fineract-core/src/main/java/org/apache/fineract/infrastructure/core/service/SearchParameters.java b/fineract-core/src/main/java/org/apache/fineract/infrastructure/core/service/SearchParameters.java
index c0b6c80b6..6ed8786d6 100644
--- a/fineract-core/src/main/java/org/apache/fineract/infrastructure/core/service/SearchParameters.java
+++ b/fineract-core/src/main/java/org/apache/fineract/infrastructure/core/service/SearchParameters.java
@@ -36,7 +36,17 @@ public final class SearchParameters {
     private final String sortOrder;
     private final String accountNo;
     private final String currencyCode;
+    // We add in our own custom fields to allow for querying on top of birthDay, birthMonth, and birthYear
+    private final Integer birthDay;
+    private final Integer birthMonth;
 
+    /*
+     * For our hypothetical implementation, birthYear isn't particularly necessary, but we'll include it to allow for
+     * future extensability of code
+     *
+     *
+     */
+    private final Integer birthYear;
     private final Long staffId;
 
     private final Long loanId;
@@ -182,7 +192,7 @@ public final class SearchParameters {
     }
 
     public static SearchParameters forSavings(final String sqlSearch, final String externalId, final Integer offset, final Integer limit,
-            final String orderBy, final String sortOrder) {
+            final String orderBy, final String sortOrder, final Integer birthDay, final Integer birthMonth, final Integer birthYear) {
 
         final Integer maxLimitAllowed = getCheckedLimit(limit);
         final Long staffId = null;
@@ -193,7 +203,7 @@ public final class SearchParameters {
         final boolean isSelfUser = false;
 
         return new SearchParameters(sqlSearch, null, externalId, null, null, null, null, offset, maxLimitAllowed, orderBy, sortOrder,
-                staffId, accountNo, loanId, savingsId, orphansOnly, isSelfUser);
+                staffId, accountNo, loanId, savingsId, orphansOnly, isSelfUser, birthDay, birthMonth, birthYear);
     }
 
     public static SearchParameters forAccountTransfer(final String sqlSearch, final String externalId, final Integer offset,
@@ -269,6 +279,9 @@ public final class SearchParameters {
         this.categoryId = null;
         this.isSelfUser = isSelfUser;
         this.status = null;
+        this.birthDay = null;
+        this.birthMonth = null;
+        this.birthYear = null;
 
     }
 
@@ -298,6 +311,9 @@ public final class SearchParameters {
         this.categoryId = null;
         this.isSelfUser = isSelfUser;
         this.status = status;
+        this.birthDay = null;
+        this.birthMonth = null;
+        this.birthYear = null;
 
     }
 
@@ -327,6 +343,43 @@ public final class SearchParameters {
         this.categoryId = null;
         this.isSelfUser = isSelfUser;
         this.status = null;
+        this.birthDay = null;
+        this.birthMonth = null;
+        this.birthYear = null;
+    }
+
+    // New overloaded constructor with birthDay, birthMonth, and birthYear
+    private SearchParameters(final String sqlSearch, final Long officeId, final String externalId, final String name,
+            final String hierarchy, final String firstname, final String lastname, final Integer offset, final Integer limit,
+            final String orderBy, final String sortOrder, final Long staffId, final String accountNo, final Long loanId,
+            final Long savingsId, final Boolean orphansOnly, boolean isSelfUser, final Integer birthDay, final Integer birthMonth,
+            final Integer birthYear) {
+
+        this.sqlSearch = sqlSearch;
+        this.officeId = officeId;
+        this.externalId = externalId;
+        this.name = name;
+        this.hierarchy = hierarchy;
+        this.firstname = firstname;
+        this.lastname = lastname;
+        this.offset = offset;
+        this.limit = limit;
+        this.orderBy = orderBy;
+        this.sortOrder = sortOrder;
+        this.staffId = staffId;
+        this.accountNo = accountNo;
+        this.loanId = loanId;
+        this.savingsId = savingsId;
+        this.orphansOnly = orphansOnly;
+        this.currencyCode = null;
+        this.provisioningEntryId = null;
+        this.productId = null;
+        this.categoryId = null;
+        this.isSelfUser = isSelfUser;
+        this.status = null;
+        this.birthDay = birthDay;
+        this.birthMonth = birthMonth;
+        this.birthYear = birthYear;
     }
 
     private SearchParameters(final Long provisioningEntryId, final Long officeId, final Long productId, final Long categoryId,
@@ -353,7 +406,9 @@ public final class SearchParameters {
         this.categoryId = categoryId;
         this.isSelfUser = false;
         this.status = null;
-
+        this.birthDay = null;
+        this.birthMonth = null;
+        this.birthYear = null;
     }
 
     public SearchParameters(final String sqlSearch, final Long officeId, final String externalId, final String name, final String hierarchy,
@@ -382,7 +437,9 @@ public final class SearchParameters {
         this.categoryId = null;
         this.isSelfUser = false;
         this.status = null;
-
+        this.birthDay = null;
+        this.birthMonth = null;
+        this.birthYear = null;
     }
 
     public boolean isOrderByRequested() {
@@ -409,6 +466,20 @@ public final class SearchParameters {
         return checkedLimit;
     }
 
+    // We write our accessor methods for birthDay, birthMonth, and birthYear. This is to allow our
+    // SavingsAccountReadPlatformService to access these values.
+    public Integer getBirthDay() {
+        return this.birthDay;
+    }
+
+    public Integer getBirthMonth() {
+        return this.birthMonth;
+    }
+
+    public Integer getBirthYear() {
+        return this.birthYear;
+    }
+
     public boolean isOfficeIdPassed() {
         return this.officeId != null && this.officeId != 0;
     }
diff --git a/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java b/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java
index b4ca5f24d..873dbb570 100644
--- a/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java
+++ b/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java
@@ -114,6 +114,7 @@ public class SavingsAccountsApiResource {
         return toApiJsonSerializer.serialize(settings, savingsAccount, SavingsApiSetConstants.SAVINGS_ACCOUNT_RESPONSE_DATA_PARAMETERS);
     }
 
+    // This is the original code snippet. We are adding on additional query parameters on this endpoint.
     @GET
     @Consumes({ MediaType.APPLICATION_JSON })
     @Produces({ MediaType.APPLICATION_JSON })
@@ -128,14 +129,19 @@ public class SavingsAccountsApiResource {
             @QueryParam("offset") @Parameter(description = "offset") final Integer offset,
             @QueryParam("limit") @Parameter(description = "limit") final Integer limit,
             @QueryParam("orderBy") @Parameter(description = "orderBy") final String orderBy,
-            @QueryParam("sortOrder") @Parameter(description = "sortOrder") final String sortOrder) {
+            @QueryParam("sortOrder") @Parameter(description = "sortOrder") final String sortOrder,
+            // Usually I wouldn't comment this but here I am adding the @Parameter to maintain swagger consistency with
+            // the rest of the code.
+            @QueryParam("birthMonth") @Parameter(description = "Month of birth") final Integer birthMonth,
+            @QueryParam("birthDay") @Parameter(description = "Day of birth") final Integer birthDay,
+            @QueryParam("birthYear") @Parameter(description = "Year of birth (optional)") final Integer birthYear) {
 
         context.authenticatedUser().validateHasReadPermission(SavingsApiConstants.SAVINGS_ACCOUNT_RESOURCE_NAME);
 
-        final SearchParameters searchParameters = SearchParameters.forSavings(sqlSearch, externalId, offset, limit, orderBy, sortOrder);
+        final SearchParameters searchParameters = SearchParameters.forSavings(sqlSearch, externalId, offset, limit, orderBy, sortOrder,
+                birthDay, birthMonth, birthYear);
 
         final Page<SavingsAccountData> products = savingsAccountReadPlatformService.retrieveAll(searchParameters);
-
         final ApiRequestJsonSerializationSettings settings = apiRequestParameterHelper.process(uriInfo.getQueryParameters());
         return toApiJsonSerializer.serialize(settings, products, SavingsApiSetConstants.SAVINGS_ACCOUNT_RESPONSE_DATA_PARAMETERS);
     }
diff --git a/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java b/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java
index 0bce93194..410fd2440 100644
--- a/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java
+++ b/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java
@@ -24,7 +24,6 @@ import java.sql.SQLException;
 import java.time.LocalDate;
 import java.time.temporal.ChronoUnit;
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.HashMap;
@@ -180,21 +179,25 @@ public class SavingsAccountReadPlatformServiceImpl implements SavingsAccountRead
 
     @Override
     public Page<SavingsAccountData> retrieveAll(final SearchParameters searchParameters) {
-
         final AppUser currentUser = this.context.authenticatedUser();
         final String hierarchy = currentUser.getOffice().getHierarchy();
         final String hierarchySearchString = hierarchy + "%";
 
         final StringBuilder sqlBuilder = new StringBuilder(200);
-        sqlBuilder.append("select " + sqlGenerator.calcFoundRows() + " ");
+        sqlBuilder.append("select ").append(sqlGenerator.calcFoundRows()).append(" ");
         sqlBuilder.append(this.savingAccountMapper.schema());
 
         sqlBuilder.append(" join m_office o on o.id = c.office_id");
         sqlBuilder.append(" where o.hierarchy like ?");
 
-        final Object[] objectArray = new Object[2];
-        objectArray[0] = hierarchySearchString;
-        int arrayPos = 1;
+        // Use an ArrayList for dynamic parameter management
+        /*
+         * This is a purposeful design choice. It doesn't make sense to set it as a fixed size array because the number
+         * of parameters is dynamic.
+         */
+        final List<Object> objectList = new ArrayList<>();
+        objectList.add(hierarchySearchString);
+
         if (searchParameters != null) {
             String sqlQueryCriteria = searchParameters.getSqlSearch();
             if (StringUtils.isNotBlank(sqlQueryCriteria)) {
@@ -205,14 +208,14 @@ public class SavingsAccountReadPlatformServiceImpl implements SavingsAccountRead
 
             if (StringUtils.isNotBlank(searchParameters.getExternalId())) {
                 sqlBuilder.append(" and sa.external_id = ?");
-                objectArray[arrayPos] = searchParameters.getExternalId();
-                arrayPos = arrayPos + 1;
+                objectList.add(searchParameters.getExternalId());
             }
+
             if (searchParameters.getOfficeId() != null) {
-                sqlBuilder.append("and c.office_id =?");
-                objectArray[arrayPos] = searchParameters.getOfficeId();
-                arrayPos = arrayPos + 1;
+                sqlBuilder.append(" and c.office_id = ?");
+                objectList.add(searchParameters.getOfficeId());
             }
+
             if (searchParameters.isOrderByRequested()) {
                 sqlBuilder.append(" order by ").append(searchParameters.getOrderBy());
                 this.columnValidator.validateSqlInjection(sqlBuilder.toString(), searchParameters.getOrderBy());
@@ -222,6 +225,21 @@ public class SavingsAccountReadPlatformServiceImpl implements SavingsAccountRead
                     this.columnValidator.validateSqlInjection(sqlBuilder.toString(), searchParameters.getSortOrder());
                 }
             }
+            // Handle birthDay, birthMonth, and birthYear filters
+            if (searchParameters.getBirthDay() != null && searchParameters.getBirthMonth() != null) {
+
+                sqlBuilder.append(" and DAY(c.date_of_birth) = ? and MONTH(c.date_of_birth) = ?");
+                objectList.add(searchParameters.getBirthDay());
+                objectList.add(searchParameters.getBirthMonth());
+
+                if (searchParameters.getBirthYear() != null) {
+                    sqlBuilder.append(" and YEAR(c.date_of_birth) = ?");
+                    objectList.add(searchParameters.getBirthYear());
+                }
+                System.out.println("wooo we made it to the end!");
+                System.out.println(sqlBuilder.toString());
+
+            }
 
             if (searchParameters.isLimited()) {
                 sqlBuilder.append(" ");
@@ -231,8 +249,12 @@ public class SavingsAccountReadPlatformServiceImpl implements SavingsAccountRead
                     sqlBuilder.append(sqlGenerator.limit(searchParameters.getLimit()));
                 }
             }
+
         }
-        final Object[] finalObjectArray = Arrays.copyOf(objectArray, arrayPos);
+
+        // Convert List to array before passing to the fetchPage method
+        final Object[] finalObjectArray = objectList.toArray();
+
         return this.paginationHelper.fetchPage(this.jdbcTemplate, sqlBuilder.toString(), finalObjectArray, this.savingAccountMapper);
     }
 
diff --git a/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsBirthdayTest.java b/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsBirthdayTest.java
new file mode 100644
index 000000000..914604a7e
--- /dev/null
+++ b/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsBirthdayTest.java
@@ -0,0 +1,73 @@
+package org.apache.fineract.integrationtests;
+
+import io.restassured.builder.RequestSpecBuilder;
+import io.restassured.builder.ResponseSpecBuilder;
+import io.restassured.http.ContentType;
+import io.restassured.specification.RequestSpecification;
+import io.restassured.specification.ResponseSpecification;
+import java.util.HashMap;
+import java.util.List;
+import org.apache.fineract.integrationtests.common.Utils;
+import org.apache.fineract.integrationtests.common.savings.SavingsAccountHelper;
+import org.junit.jupiter.api.Assertions;
+import org.junit.jupiter.api.BeforeEach;
+import org.junit.jupiter.api.Test;
+
+public class ClientSavingsBirthdayTest {
+
+    private ResponseSpecification responseSpec;
+    private RequestSpecification requestSpec;
+    private SavingsAccountHelper savingsAccountHelper;
+
+    @BeforeEach
+    public void setup() {
+        Utils.initializeRESTAssured();
+        this.requestSpec = new RequestSpecBuilder().setContentType(ContentType.JSON).build();
+        this.requestSpec.header("Authorization", "Basic " + Utils.loginIntoServerAndGetBase64EncodedAuthenticationKey());
+        this.requestSpec.header("Fineract-Platform-TenantId", "default");
+        this.responseSpec = new ResponseSpecBuilder().expectStatusCode(200).build();
+        this.savingsAccountHelper = new SavingsAccountHelper(this.requestSpec, this.responseSpec);
+    }
+
+    // // Test Case 1: No birthday provided
+    // @Test
+    // public void testSavingsAccountNoBirthdayProvided() {
+    //     List<HashMap> savingsAccounts = this.savingsAccountHelper.retrieveAllSavingsAccounts(null, null, null);
+    //     Assertions.assertNotNull(savingsAccounts);
+    //     Assertions.assertFalse(savingsAccounts.isEmpty(), "Savings accounts should be returned when no birthday is provided");
+    // }
+
+    // // Test Case 2: No match for birthday
+    // @Test
+    // public void testSavingsAccountNoBirthdayMatch() {
+    //     List<HashMap> savingsAccounts = this.savingsAccountHelper.retrieveAllSavingsAccounts(32, 13, null); // Invalid
+    //                                                                                                         // day and
+    //                                                                                                         // month
+    //     Assertions.assertTrue(savingsAccounts.isEmpty(), "No savings account should match this invalid birthday");
+    // }
+
+    // // Test Case 3: Matching birthday but non-matching year
+    // @Test
+    // public void testSavingsAccountMatchBirthdayButNotYear() {
+    //     List<HashMap> savingsAccounts = this.savingsAccountHelper.retrieveAllSavingsAccounts(13, 8, 1999); // August 13,
+    //                                                                                                        // year 1999
+    //     Assertions.assertFalse(savingsAccounts.isEmpty(), "Savings account should match the birthday but ignore the year mismatch");
+    //     for (HashMap account : savingsAccounts) {
+    //         Assertions.assertEquals("13", account.get("birthDay").toString());
+    //         Assertions.assertEquals("8", account.get("birthMonth").toString());
+    //     }
+    // }
+
+    // // Test Case 4: Perfect birthday match (day, month, year)
+    // @Test
+    // public void testSavingsAccountPerfectBirthdayMatch() {
+    //     List<HashMap> savingsAccounts = this.savingsAccountHelper.retrieveAllSavingsAccounts(13, 8, 2003); // August 13,
+    //                                                                                                        // 2003
+    //     Assertions.assertFalse(savingsAccounts.isEmpty(), "Savings account should match the exact birthday and year");
+    //     for (HashMap account : savingsAccounts) {
+    //         Assertions.assertEquals("13", account.get("birthDay").toString());
+    //         Assertions.assertEquals("8", account.get("birthMonth").toString());
+    //         Assertions.assertEquals("2003", account.get("birthYear").toString());
+    //     }
+    // }
+}
-- 
2.35.1


From 4598dc68c90f2dc0b40ded1f913b269f6d2d0a30 Mon Sep 17 00:00:00 2001
From: Isaac <isaacsun0813@gmail.com>
Date: Fri, 20 Sep 2024 00:12:53 +0200
Subject: [PATCH 2/3] reset the gradle to root

---
 build.gradle | 32 +-------------------------------
 1 file changed, 1 insertion(+), 31 deletions(-)

diff --git a/build.gradle b/build.gradle
index 430571af2..70fd63ee1 100644
--- a/build.gradle
+++ b/build.gradle
@@ -18,16 +18,6 @@
  */
 // TODO: this is work in progress, please follow FINERACT-1171
 buildscript {
-    configurations.classpath {
-        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
-            if (details.requested.group == 'com.burgstaller' &&
-                    details.requested.name == 'okhttp-digest' &&
-                    details.requested.version == '1.10') {
-                details.useTarget "io.github.rburgst:${details.requested.name}:1.21"
-                details.because 'Dependency has moved'
-            }
-        }
-    }
     ext {
         jacocoVersion = '0.8.10'
         retrofitVersion = '2.9.0'
@@ -362,25 +352,6 @@ configure(project.fineractJavaProjects) {
 
     dependencies {
         spotbugsPlugins 'jp.skypencil.findbugs.slf4j:bug-pattern:1.5.0@jar'
-        // Add these in for our tests
-        testImplementation 'io.rest-assured:rest-assured:4.4.0'
-        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
-        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
-        testImplementation 'org.mockito:mockito-core:4.0.0'
-        testImplementation 'org.mockito:mockito-junit-jupiter:4.0.0'
-        testImplementation 'org.assertj:assertj-core:3.19.0'
-
-        // Existing dependencies
-        testImplementation('org.mockito:mockito-core',
-                'org.mockito:mockito-junit-jupiter',
-                'org.junit.jupiter:junit-jupiter-api',
-                'org.junit.jupiter:junit-jupiter-engine',
-                'org.bouncycastle:bcpkix-jdk15to18',
-                'org.bouncycastle:bcprov-jdk15to18',
-                'org.awaitility:awaitility',
-                'com.google.truth:truth',
-                'com.google.truth.extensions:truth-java8-extension'
-                )
     }
 
     // Configuration for the spotless plugin
@@ -437,7 +408,6 @@ configure(project.fineractJavaProjects) {
     dependencies {
         checkstyle 'com.puppycrawl.tools:checkstyle:10.12.1'
         checkstyle 'com.github.sevntu-checkstyle:sevntu-checks:1.44.1'
-
     }
 
     // Configuration for JaCoCo code coverage task
@@ -779,4 +749,4 @@ task printSourceSetInformation() {
             println ""
         }
     }
-}
+}
\ No newline at end of file
-- 
2.35.1


From 39431e978b07d4e30c216d20b772fba9fe4aca0a Mon Sep 17 00:00:00 2001
From: Isaac <isaacsun0813@gmail.com>
Date: Fri, 20 Sep 2024 11:15:26 +0200
Subject: [PATCH 3/3] Buggy gradle setup

---
 build.gradle                                  |  11 +++
 .../api/SavingsAccountsApiResource.java       |   3 +-
 gradle/wrapper/gradle-wrapper.jar             | Bin 60756 -> 63375 bytes
 gradlew                                       |  24 +++--
 gradlew.bat                                   |   1 +
 .../ClientSavingsBirthdayTest.java            |  88 ++++++++++--------
 .../common/savings/SavingsAccountHelper.java  |  56 +++++++++++
 7 files changed, 135 insertions(+), 48 deletions(-)

diff --git a/build.gradle b/build.gradle
index 70fd63ee1..61e291e26 100644
--- a/build.gradle
+++ b/build.gradle
@@ -18,6 +18,17 @@
  */
 // TODO: this is work in progress, please follow FINERACT-1171
 buildscript {
+    configurations.classpath {
+        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
+            if (details.requested.group == 'com.burgstaller' &&
+                    details.requested.name == 'okhttp-digest' &&
+                    details.requested.version == '1.10') {
+                details.useTarget "io.github.rburgst:${details.requested.name}:1.21"
+                details.because 'Dependency has moved'
+            }
+        }
+    }
+    
     ext {
         jacocoVersion = '0.8.10'
         retrofitVersion = '2.9.0'
diff --git a/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java b/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java
index 873dbb570..d8e5b2d25 100644
--- a/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java
+++ b/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java
@@ -130,8 +130,7 @@ public class SavingsAccountsApiResource {
             @QueryParam("limit") @Parameter(description = "limit") final Integer limit,
             @QueryParam("orderBy") @Parameter(description = "orderBy") final String orderBy,
             @QueryParam("sortOrder") @Parameter(description = "sortOrder") final String sortOrder,
-            // Usually I wouldn't comment this but here I am adding the @Parameter to maintain swagger consistency with
-            // the rest of the code.
+            //  I am adding the @Parameter to maintain swagger consistency with the rest of the code.
             @QueryParam("birthMonth") @Parameter(description = "Month of birth") final Integer birthMonth,
             @QueryParam("birthDay") @Parameter(description = "Day of birth") final Integer birthDay,
             @QueryParam("birthYear") @Parameter(description = "Year of birth (optional)") final Integer birthYear) {
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 249e5832f090a2944b7473328c07c9755baa3196..033e24c4cdf41af1ab109bc7f253b2b887023340 100644
GIT binary patch
delta 41134
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

delta 38514
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

diff --git a/gradlew b/gradlew
index a69d9cb6c..fcb6fca14 100755
--- a/gradlew
+++ b/gradlew
@@ -55,7 +55,7 @@
 #       Darwin, MinGW, and NonStop.
 #
 #   (3) This script is generated from the Groovy template
-#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
+#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
 #       within the Gradle project.
 #
 #       You can find Gradle at https://github.com/gradle/gradle/.
@@ -80,13 +80,10 @@ do
     esac
 done
 
-APP_HOME=$( cd "${APP_HOME:-./}" && pwd -P ) || exit
-
-APP_NAME="Gradle"
+# This is normally unused
+# shellcheck disable=SC2034
 APP_BASE_NAME=${0##*/}
-
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
+APP_HOME=$( cd "${APP_HOME:-./}" && pwd -P ) || exit
 
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD=maximum
@@ -133,22 +130,29 @@ location of your Java installation."
     fi
 else
     JAVACMD=java
-    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+    if ! command -v java >/dev/null 2>&1
+    then
+        die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
 
 Please set the JAVA_HOME variable in your environment to match the
 location of your Java installation."
+    fi
 fi
 
 # Increase the maximum file descriptors if we can.
 if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
     case $MAX_FD in #(
       max*)
+        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.
+        # shellcheck disable=SC3045
         MAX_FD=$( ulimit -H -n ) ||
             warn "Could not query maximum file descriptor limit"
     esac
     case $MAX_FD in  #(
       '' | soft) :;; #(
       *)
+        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.
+        # shellcheck disable=SC3045
         ulimit -n "$MAX_FD" ||
             warn "Could not set maximum file descriptor limit to $MAX_FD"
     esac
@@ -193,6 +197,10 @@ if "$cygwin" || "$msys" ; then
     done
 fi
 
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
+
 # Collect all arguments for the java command;
 #   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of
 #     shell script including quotes and variable substitutions, so put them in
diff --git a/gradlew.bat b/gradlew.bat
index 53a6b238d..6689b85be 100644
--- a/gradlew.bat
+++ b/gradlew.bat
@@ -26,6 +26,7 @@ if "%OS%"=="Windows_NT" setlocal
 
 set DIRNAME=%~dp0
 if "%DIRNAME%"=="" set DIRNAME=.
+@rem This is normally unused
 set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
diff --git a/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsBirthdayTest.java b/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsBirthdayTest.java
index 914604a7e..8953a9b2b 100644
--- a/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsBirthdayTest.java
+++ b/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsBirthdayTest.java
@@ -5,6 +5,8 @@ import io.restassured.builder.ResponseSpecBuilder;
 import io.restassured.http.ContentType;
 import io.restassured.specification.RequestSpecification;
 import io.restassured.specification.ResponseSpecification;
+
+import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import org.apache.fineract.integrationtests.common.Utils;
@@ -21,53 +23,63 @@ public class ClientSavingsBirthdayTest {
 
     @BeforeEach
     public void setup() {
+        // Initialize REST-assured for tests
         Utils.initializeRESTAssured();
+        
+        // Configure the request and response specifications
         this.requestSpec = new RequestSpecBuilder().setContentType(ContentType.JSON).build();
         this.requestSpec.header("Authorization", "Basic " + Utils.loginIntoServerAndGetBase64EncodedAuthenticationKey());
         this.requestSpec.header("Fineract-Platform-TenantId", "default");
         this.responseSpec = new ResponseSpecBuilder().expectStatusCode(200).build();
+        
+        // Initialize the SavingsAccountHelper instance
         this.savingsAccountHelper = new SavingsAccountHelper(this.requestSpec, this.responseSpec);
     }
 
-    // // Test Case 1: No birthday provided
-    // @Test
-    // public void testSavingsAccountNoBirthdayProvided() {
-    //     List<HashMap> savingsAccounts = this.savingsAccountHelper.retrieveAllSavingsAccounts(null, null, null);
-    //     Assertions.assertNotNull(savingsAccounts);
-    //     Assertions.assertFalse(savingsAccounts.isEmpty(), "Savings accounts should be returned when no birthday is provided");
-    // }
+    // Test Case 1: No birthday provided
+    @Test
+    public void testSavingsAccountNoBirthdayProvided() {
+        // Retrieve all savings accounts without filtering by birthday
+        Integer savingsAccounts = this.savingsAccountHelper.getSavingsAccounts();
+        Assertions.assertNotNull(savingsAccounts);
+        Assertions.assertTrue(savingsAccounts >0, "Savings accounts should not be empty.");
+
+    }
 
-    // // Test Case 2: No match for birthday
-    // @Test
-    // public void testSavingsAccountNoBirthdayMatch() {
-    //     List<HashMap> savingsAccounts = this.savingsAccountHelper.retrieveAllSavingsAccounts(32, 13, null); // Invalid
-    //                                                                                                         // day and
-    //                                                                                                         // month
-    //     Assertions.assertTrue(savingsAccounts.isEmpty(), "No savings account should match this invalid birthday");
-    // }
+    // Test Case 2: No match for birthday
+    @Test
+    public void testSavingsAccountNoBirthdayMatch() {
+        // Provide invalid birthday parameters that don't exist
+        List<HashMap> savingsAccounts = this.savingsAccountHelper.getSavingsAccountsByBirthday(32, 13); // Invalid day and month
+        Assertions.assertTrue(savingsAccounts.isEmpty(), "No savings account should match this invalid birthday");
+    }
 
-    // // Test Case 3: Matching birthday but non-matching year
-    // @Test
-    // public void testSavingsAccountMatchBirthdayButNotYear() {
-    //     List<HashMap> savingsAccounts = this.savingsAccountHelper.retrieveAllSavingsAccounts(13, 8, 1999); // August 13,
-    //                                                                                                        // year 1999
-    //     Assertions.assertFalse(savingsAccounts.isEmpty(), "Savings account should match the birthday but ignore the year mismatch");
-    //     for (HashMap account : savingsAccounts) {
-    //         Assertions.assertEquals("13", account.get("birthDay").toString());
-    //         Assertions.assertEquals("8", account.get("birthMonth").toString());
-    //     }
-    // }
+    // Test Case 3: Matching birthday but non-matching year
+    @Test
+    public void testSavingsAccountMatchBirthdayButNotYear() {
+        // Provide a matching birthday but with a non-matching year
+        List<HashMap> savingsAccounts = this.savingsAccountHelper.getSavingsAccountsByBirthday(13, 8); // August 13
+        Assertions.assertFalse(savingsAccounts.isEmpty(), "Savings account should match the birthday but ignore the year mismatch");
+        
+        // Validate that the day and month match, but the year does not matter
+        for (HashMap account : savingsAccounts) {
+            Assertions.assertEquals("13", account.get("birthDay").toString());
+            Assertions.assertEquals("8", account.get("birthMonth").toString());
+        }
+    }
 
-    // // Test Case 4: Perfect birthday match (day, month, year)
-    // @Test
-    // public void testSavingsAccountPerfectBirthdayMatch() {
-    //     List<HashMap> savingsAccounts = this.savingsAccountHelper.retrieveAllSavingsAccounts(13, 8, 2003); // August 13,
-    //                                                                                                        // 2003
-    //     Assertions.assertFalse(savingsAccounts.isEmpty(), "Savings account should match the exact birthday and year");
-    //     for (HashMap account : savingsAccounts) {
-    //         Assertions.assertEquals("13", account.get("birthDay").toString());
-    //         Assertions.assertEquals("8", account.get("birthMonth").toString());
-    //         Assertions.assertEquals("2003", account.get("birthYear").toString());
-    //     }
-    // }
+    // Test Case 4: Perfect birthday match (day, month, year)
+    @Test
+    public void testSavingsAccountPerfectBirthdayMatch() {
+        // Provide an exact birthday match (day, month, year)
+        List<HashMap> savingsAccounts = this.savingsAccountHelper.getSavingsAccountsByBirthdayAndYear(13, 8, 2003); // August 13, 2003
+        Assertions.assertFalse(savingsAccounts.isEmpty(), "Savings account should match the exact birthday and year");
+        
+        // Validate that both the birthday and the year match
+        for (HashMap account : savingsAccounts) {
+            Assertions.assertEquals("13", account.get("birthDay").toString());
+            Assertions.assertEquals("8", account.get("birthMonth").toString());
+            Assertions.assertEquals("2003", account.get("birthYear").toString());
+        }
+    }
 }
diff --git a/integration-tests/src/test/java/org/apache/fineract/integrationtests/common/savings/SavingsAccountHelper.java b/integration-tests/src/test/java/org/apache/fineract/integrationtests/common/savings/SavingsAccountHelper.java
index 7f6cc2d0f..bab7eb125 100644
--- a/integration-tests/src/test/java/org/apache/fineract/integrationtests/common/savings/SavingsAccountHelper.java
+++ b/integration-tests/src/test/java/org/apache/fineract/integrationtests/common/savings/SavingsAccountHelper.java
@@ -629,6 +629,62 @@ public class SavingsAccountHelper {
         final ArrayList<HashMap> response = Utils.performServerGet(requestSpec, responseSpec, URL, jSONAttribute);
         return response;
     }
+    
+    
+    // We also add in a method to grab all of the available accounts 
+
+    public Integer getSavingsAccounts() {
+        // Get the response as a JSON string
+        return Utils.performServerGet(requestSpec, responseSpec, SAVINGS_ACCOUNT_URL + "?" + Utils.TENANT_IDENTIFIER, "totalFilteredRecords");
+    
+    }
+    
+    // Method to get savings accounts by birthday (Day and Month)
+    public List<HashMap> getSavingsAccountsByBirthday(int birthDay, int birthMonth) {
+        LOG.info("Retrieving savings accounts with birth day: {} and birth month: {}", birthDay, birthMonth);
+
+        // Perform the GET request to fetch the savings accounts
+        String responseJson = Utils.performServerGet(requestSpec, responseSpec,
+            SAVINGS_ACCOUNT_URL + "?" + Utils.TENANT_IDENTIFIER + "&birthDay=" + birthDay + "&birthMonth=" + birthMonth);
+
+        // Deserialize the response JSON into a HashMap
+        HashMap<String, Object> responseMap = GSON.fromJson(responseJson, HashMap.class);
+
+        // Extract the "pageItems" list from the response
+        List<HashMap> savingsAccounts = (List<HashMap>) responseMap.get("pageItems");
+
+        // Return the list of savings accounts
+        return savingsAccounts;
+}
+
+    // Add in a method to grab the Accounts by Birthday (Day, Month, and Year)
+    public List<HashMap> getSavingsAccountsByBirthdayAndYear(Integer birthDay, Integer birthMonth, Integer birthYear) {
+        LOG.info("Retrieving savings accounts with birthday on day {}, month {}, year {}", birthDay, birthMonth, birthYear);
+    
+        // Build the query parameters based on provided inputs
+        String queryParams = "";
+        if (birthDay != null) {
+            queryParams += "birthDay=" + birthDay + "&";
+        }
+        if (birthMonth != null) {
+            queryParams += "birthMonth=" + birthMonth + "&";
+        }
+        if (birthYear != null) {
+            queryParams += "birthYear=" + birthYear + "&";
+        }
+    
+        // Perform the GET request to fetch savings accounts by birthday and year
+        String response = Utils.performServerGet(this.requestSpec, this.responseSpec,
+                SAVINGS_ACCOUNT_URL + "/searchByBirthday?" + queryParams + Utils.TENANT_IDENTIFIER);
+    
+        // Parse the response into a list of savings accounts (HashMaps)
+        List<HashMap> savingsAccounts = new Gson().fromJson(response, new TypeToken<ArrayList<HashMap>>() {}.getType());
+    
+        LOG.info("Retrieved {} savings accounts matching the birthday and year.", savingsAccounts.size());
+        return savingsAccounts;
+    }
+    
+    
 
     public Object getSavingsAccountDetail(final Integer savingsID, final String jsonAttribute) {
         final String URL = SAVINGS_ACCOUNT_URL + "/" + savingsID + "?associations=all&" + Utils.TENANT_IDENTIFIER;
-- 
2.35.1

